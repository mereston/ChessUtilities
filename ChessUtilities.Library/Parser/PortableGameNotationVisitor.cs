//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/willi/Development/PgnParser/PgnParser.Library/Parser/PortableGameNotation.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ChessUtilities.Library.Parser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="PortableGameNotationParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IPortableGameNotationVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="PortableGameNotationParser.pgnfile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPgnfile([NotNull] PortableGameNotationParser.PgnfileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PortableGameNotationParser.metadatasection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMetadatasection([NotNull] PortableGameNotationParser.MetadatasectionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PortableGameNotationParser.movesection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMovesection([NotNull] PortableGameNotationParser.MovesectionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PortableGameNotationParser.movelist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMovelist([NotNull] PortableGameNotationParser.MovelistContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PortableGameNotationParser.move"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMove([NotNull] PortableGameNotationParser.MoveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PortableGameNotationParser.halfmove"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHalfmove([NotNull] PortableGameNotationParser.HalfmoveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PortableGameNotationParser.movenumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMovenumber([NotNull] PortableGameNotationParser.MovenumberContext context);
}
} // namespace PgnParser.Library.Parser
